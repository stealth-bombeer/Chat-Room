{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G15-5515\\\\OneDrive\\\\Pictures\\\\Socket-io\\\\client\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = _ref => {\n  _s();\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [messageList, setmessageList] = useState([]);\n  const sendMessage = async () => {\n    if (currentMessage) {\n      const messageData = {\n        //this message data contain what all infos we need to display with the message sent \n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n    }\n  };\n  //listen every time there is a change in socket \n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      // console.log(data);\n      setmessageList(list => [...list, data]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Live Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messageList.map(messageContent => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            id: username === messageContent.author,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: messageContent.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: messageContent.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: messageContent.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Hey...\",\n          onChange: event => {\n            setCurrentMessage(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\u25BA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"XPHgMP2eHgSVBkDcmbbnYXsiGDQ=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","Chat","socket","username","room","currentMessage","setCurrentMessage","messageList","setmessageList","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","on","data","list","map","messageContent","event","target","value"],"sources":["C:/Users/G15-5515/OneDrive/Pictures/Socket-io/client/src/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './App.css';\r\nconst Chat = ({ socket, username, room }) => {\r\n    const [currentMessage, setCurrentMessage] = useState('');\r\n    const [messageList, setmessageList] = useState([]);\r\n    const sendMessage = async () => {\r\n        if (currentMessage) {\r\n            const messageData = {\r\n                //this message data contain what all infos we need to display with the message sent \r\n                room: room,\r\n                author: username,\r\n                message: currentMessage,\r\n                time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\r\n\r\n            };\r\n            await socket.emit(\"send_message\", messageData)\r\n        }\r\n    };\r\n    //listen every time there is a change in socket \r\n    useEffect(() => {\r\n        socket.on(\"receive_message\", (data) => {\r\n            // console.log(data);\r\n            setmessageList((list) => [...list, data])\r\n        });\r\n\r\n    }, [socket]);\r\n    return (\r\n        <div className=\"chat-window\">\r\n            <div>\r\n                <div className=\"chat-header\">\r\n                    <p>Live Chat</p>\r\n                </div>\r\n                <div className=\"chat-body\">\r\n                    {messageList.map((messageContent) => {\r\n                    return (\r\n                        <div className=\"message\" id={username=== messageContent.author}>\r\n                            <div>\r\n                                <p>{messageContent.message}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p>{messageContent.time}</p>\r\n                                <p>{messageContent.author}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    \r\n                    })}\r\n\r\n                </div>\r\n                <div className=\"chat-footer\">\r\n                    <input type=\"text\" name=\"\" id=\"\" placeholder=\"Hey...\" onChange={(event) => {\r\n                        setCurrentMessage(event.target.value);\r\n                    }} />\r\n                    <button onClick={sendMessage}>&#9658;</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC;AACnB,MAAMC,IAAI,GAAG,QAAgC;EAAA;EAAA,IAA/B;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAK,CAAC;EACpC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMS,WAAW,GAAG,YAAY;IAC5B,IAAIJ,cAAc,EAAE;MAChB,MAAMK,WAAW,GAAG;QAChB;QACAN,IAAI,EAAEA,IAAI;QACVO,MAAM,EAAER,QAAQ;QAChBS,OAAO,EAAEP,cAAc;QACvBQ,IAAI,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACC,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAIF,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACE,UAAU;MAEjF,CAAC;MACD,MAAMf,MAAM,CAACgB,IAAI,CAAC,cAAc,EAAER,WAAW,CAAC;IAClD;EACJ,CAAC;EACD;EACAX,SAAS,CAAC,MAAM;IACZG,MAAM,CAACiB,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAK;MACnC;MACAZ,cAAc,CAAEa,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,IAAI,CAAC,CAAC;IAC7C,CAAC,CAAC;EAEN,CAAC,EAAE,CAAClB,MAAM,CAAC,CAAC;EACZ,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,uBACxB;MAAA,wBACI;QAAK,SAAS,EAAC,aAAa;QAAA,uBACxB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAgB;QAAA;QAAA;QAAA;MAAA,QACd,eACN;QAAK,SAAS,EAAC,WAAW;QAAA,UACrBK,WAAW,CAACe,GAAG,CAAEC,cAAc,IAAK;UACrC,oBACI;YAAK,SAAS,EAAC,SAAS;YAAC,EAAE,EAAEpB,QAAQ,KAAIoB,cAAc,CAACZ,MAAO;YAAA,wBAC3D;cAAA,uBACI;gBAAA,UAAIY,cAAc,CAACX;cAAO;gBAAA;gBAAA;gBAAA;cAAA;YAAK;cAAA;cAAA;cAAA;YAAA,QAC7B,eACN;cAAA,wBACI;gBAAA,UAAIW,cAAc,CAACV;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eAC5B;gBAAA,UAAIU,cAAc,CAACZ;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAK;YAAA;cAAA;cAAA;cAAA;YAAA,QAC5B;UAAA;YAAA;YAAA;YAAA;UAAA,QACJ;QAGV,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEA,eACN;QAAK,SAAS,EAAC,aAAa;QAAA,wBACxB;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,EAAE;UAAC,EAAE,EAAC,EAAE;UAAC,WAAW,EAAC,QAAQ;UAAC,QAAQ,EAAGa,KAAK,IAAK;YACvElB,iBAAiB,CAACkB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UACzC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,eACL;UAAQ,OAAO,EAAEjB,WAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5C;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAxDKR,IAAI;AAAA,KAAJA,IAAI;AA0DV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}