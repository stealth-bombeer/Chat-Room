{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G15-5515\\\\OneDrive\\\\Pictures\\\\Socket-io\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport io from 'socket.io-client';\nimport { useState } from 'react';\n//we're connecting our frontend with socket.io (where our backend server where it is runing)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:3001');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [room, setRoom] = useState('');\n  const joinRoom = () => {\n    //we allow to join room without username and room \n    if (username && room) {\n      socket.emit(\"join_room\", room);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Join A Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), \"//input for name\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"John...\",\n      onChange: event => {\n        //event.target.value is whatever we type in inpt\n        setUsername(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Room-id\",\n      onChange: event => {\n        //event.target.value is whatever we type in inpt\n        setRoom(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinRoom,\n      children: \"Join A Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"oVZOMMnVFUthgUwncdJPbRlu8vM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","socket","connect","App","username","setUsername","room","setRoom","joinRoom","emit","event","target","value"],"sources":["C:/Users/G15-5515/OneDrive/Pictures/Socket-io/client/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport io from 'socket.io-client'\nimport {useState} from 'react'\n//we're connecting our frontend with socket.io (where our backend server where it is runing)\nconst socket=io.connect('http://localhost:3001')\n\nfunction App() {\nconst [username,setUsername]=useState('');\nconst [room,setRoom]=useState('');\n\nconst joinRoom=()=>\n{ //we allow to join room without username and room \n     if(username && room )\n   {\n    socket.emit(\"join_room\",room)\n   }\n}\n  return (\n   <div className=\"App\">\n    <h3>Join A Chat</h3>\n    //input for name \n    <input type=\"text\" placeholder=\"John...\" onChange={(event)=>\n    { //event.target.value is whatever we type in inpt\n      setUsername(event.target.value)\n    }}></input>\n    {/* // input for room  we want to have chat with peeps in same room  */}\n    <input type=\"text\" placeholder=\"Room-id\"   onChange={(event)=>\n    { //event.target.value is whatever we type in inpt\n      setRoom(event.target.value)\n    }}></input>\n    <button onClick={joinRoom}>Join A Room</button>\n   </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAAQC,QAAQ,QAAO,OAAO;AAC9B;AAAA;AACA,MAAMC,MAAM,GAACF,EAAE,CAACG,OAAO,CAAC,uBAAuB,CAAC;AAEhD,SAASC,GAAG,GAAG;EAAA;EACf,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACL,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACM,IAAI,EAACC,OAAO,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAEjC,MAAMQ,QAAQ,GAAC,MACf;IAAE;IACG,IAAGJ,QAAQ,IAAIE,IAAI,EACrB;MACCL,MAAM,CAACQ,IAAI,CAAC,WAAW,EAACH,IAAI,CAAC;IAC9B;EACH,CAAC;EACC,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,wBACnB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,mCAEpB;MAAO,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC,SAAS;MAAC,QAAQ,EAAGI,KAAK,IACzD;QAAE;QACAL,WAAW,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MACjC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS,eAEX;MAAO,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC,SAAS;MAAG,QAAQ,EAAGF,KAAK,IAC3D;QAAE;QACAH,OAAO,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAC7B;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS,eACX;MAAQ,OAAO,EAAEJ,QAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1C;AAET;AAAC,GA3BQL,GAAG;AAAA,KAAHA,GAAG;AA6BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}